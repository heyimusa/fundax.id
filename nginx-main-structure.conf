# Multi-Application Nginx Configuration
# Main configuration file for managing multiple domains/applications

# Upstream definitions for applications
upstream fundax_backend {
    server 127.0.0.1:5000;
}

upstream heyimusa_backend {
    server 127.0.0.1:5001;
}

# Common proxy settings
proxy_temp_path /var/cache/nginx/proxy_temp;
proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=app_cache:10m max_size=1g inactive=60m;

# Common SSL settings
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
ssl_prefer_server_ciphers off;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

#===============================================================
# FUNDAX.ID DOMAIN CONFIGURATION
#===============================================================

# HTTP redirect for fundax.id
server {
    listen 80;
    server_name fundax.id www.fundax.id;
    return 301 https://$server_name$request_uri;
}

# HTTPS server for fundax.id
server {
    listen 443 ssl http2;
    server_name fundax.id www.fundax.id;

    # SSL certificate configuration
    ssl_certificate /etc/letsencrypt/live/fundax.id/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fundax.id/privkey.pem;

    # SSL security headers
    include /etc/nginx/snippets/ssl-params.conf;

    # Main location - Fundax application
    location / {
        proxy_pass http://fundax_backend;
        include /etc/nginx/snippets/proxy-headers.conf;
    }

    # Security headers
    include /etc/nginx/snippets/security-headers.conf;
}

#===============================================================
# HI.HEYIMUSA.BLOG DOMAIN CONFIGURATION
#===============================================================

# HTTP redirect for hi.heyimusa.blog
server {
    listen 80;
    server_name hi.heyimusa.blog;
    return 301 https://$server_name$request_uri;
}

# HTTPS server for hi.heyimusa.blog
server {
    listen 443 ssl http2;
    server_name hi.heyimusa.blog;

    # SSL certificate configuration
    ssl_certificate /etc/letsencrypt/live/hi.heyimusa.blog/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hi.heyimusa.blog/privkey.pem;

    # SSL security headers
    include /etc/nginx/snippets/ssl-params.conf;

    # Main location - HeyImUsa application
    location / {
        proxy_pass http://heyimusa_backend;
        include /etc/nginx/snippets/proxy-headers.conf;
    }

    # Security headers
    include /etc/nginx/snippets/security-headers.conf;
}

#===============================================================
# FUTURE APPLICATION TEMPLATE
#===============================================================
# Use this template for new applications:
#
# server {
#     listen 80;
#     server_name newdomain.com www.newdomain.com;
#     return 301 https://$server_name$request_uri;
# }
# 
# server {
#     listen 443 ssl http2;
#     server_name newdomain.com www.newdomain.com;
#     
#     ssl_certificate /etc/letsencrypt/live/newdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/newdomain.com/privkey.pem;
#     
#     include /etc/nginx/snippets/ssl-params.conf;
#     
#     location / {
#         proxy_pass http://new_backend;  # Define upstream for new app
#         include /etc/nginx/snippets/proxy-headers.conf;
#     }
#     
#     include /etc/nginx/snippets/security-headers.conf;
# }